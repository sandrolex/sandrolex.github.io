{"version":3,"sources":["enc/crypt.js","Login/Login.js","data/handle.js","gh/gh.js","Screens/FormScreen.js","Screens/Message.js","Screens/EditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["toBase64String","words","CryptoJS","enc","Base64","stringify","encryptData","input","key","secret_key","SHA256","iv","lib","WordArray","random","options","mode","CBC","body","AES","encrypt","concat","ciphertext","decryptData","packet","parse","start","length","end","create","slice","parsed_iv","decrypted","decrypt","Utf8","Login","props","useState","password","setPassword","handleSubmit","e","preventDefault","loginCallback","className","onSubmit","value","onChange","target","name","type","month","getDataFromStruct","d2","date","cleartxt","clearjson","JSON","YY","getFullYear","MM","getMonth","DD","getDate","root","f","s","a","t","sl","m","w","commitFile","repository","branch","filePath","content","pat","accessToken","axios","get","headers","Authorization","refResponse","refSha","data","sha","put","message","btoa","console","error","FormScreen","food","setFood","sport","setSport","alcool","setAlcool","tabac","setTabac","sleep","setSleep","mood","setMood","weight","setWeight","db","d1","msgHandler","useEffect","then","toLocaleDateString","checked","parseInt","toString","onClick","clear","addDataToStruct","delDataFromStruct","Message","msgClass","textClass","EditScreen","Date","selectedDate","setSelectedDate","setError","setMessage","d","App","setDb","loggedIn","setLoggedIn","host","window","location","protocol","includes","fetch","res","json","catch","err","log","d3","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f62ec747.chunk.js","sourcesContent":["import CryptoJS from \"crypto-js\";\n\n\nfunction toString(words){\n    return CryptoJS.enc.Utf8.stringify(words);\n}\n\nfunction toBase64String(words){\n    return CryptoJS.enc.Base64.stringify(words);\n}\n\nexport function encryptData(input, key){\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n    var options = {\n        iv: iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var body = CryptoJS.AES.encrypt(input, secret_key, options);\n    iv.concat(body.ciphertext);\n    return toBase64String(iv);\n}\n\nexport function decryptData(input, key){\n    var packet = CryptoJS.enc.Base64.parse(input);\n\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n\n    var start = iv.words.length;\n    var end = packet.words.length;\n    \n    var ciphertext = CryptoJS.lib.WordArray.create(packet.words.slice(start, end));\n    var parsed_iv = CryptoJS.lib.WordArray.create(packet.words.slice(0, iv.words.length+1));\n    ciphertext = toBase64String(ciphertext);\n    var options = {\n        iv: parsed_iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var decrypted = CryptoJS.AES.decrypt(ciphertext, secret_key, options);\n\n    return toString(decrypted);\n}","import { useState } from \"react\";\n\nconst Login = props => {\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        props.loginCallback(password);\n    }\n    return (\n        <div className=\"card\">\n             <form onSubmit={handleSubmit}>\n                <input\n                    value={password}\n                    onChange={({ target }) => {\n                        setPassword(target.value);\n                    }}\n                    name=\"password\"\n                    type=\"text\"\n                />\n                \n                <button \n                    className=\"btn submit-btn\" \n                    type=\"submit\"\n                >\n                    Go\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","import { decryptData, encryptData } from \"../enc/crypt.js\"\n\nconst month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n\nexport const getDataFromStruct = async (d2, date, password) => {\n    const cleartxt = decryptData(d2, password);\n    const clearjson = JSON.parse(cleartxt);\n    const YY = date.getFullYear();\n    const MM = month[date.getMonth()];\n    const DD = date.getDate();\n    const root = {\n        f: 0,\n        s: 0,\n        a: 0,\n        t: 0,\n        sl: 0,\n        m: 0,\n        w: 0,\n    }\n    if (!(YY in clearjson)) {\n        return root;\n    }\n    if (! (MM in clearjson[YY])) {\n        return root;\n    }\n    if (! (DD in clearjson[YY][MM])) {\n        return root;\n    }\n    return clearjson[YY][MM][DD];\n}\n\nexport const delDataFromStruct = (d2, date, password) => {\n    const cleartxt = decryptData(d2, password);\n    let clear = JSON.parse(cleartxt);\n    const YY = date.getFullYear();\n    const MM = month[date.getMonth()];\n    const DD = date.getDate();\n    if (!(YY in clear)) {\n        return d2;\n    }\n    if (! (MM in clear[YY])) {\n        return d2;\n    }\n    delete clear[YY][MM][DD];\n    return encryptData(JSON.stringify(clear), password);\n}\n\nexport const addDataToStruct = (d2, data, password) => {\n    const cleartxt = decryptData(d2, password);\n    const YY = data.date.getFullYear();\n    const MM = month[data.date.getMonth()];\n    const DD = data.date.getDate();\n    const root = {\n        f: data.food,\n        s: data.sport,\n        a: data.alcool,\n        t: data.tabac,\n        sl: data.sleep,\n        m: data.mood,\n        w: data.weight,\n    }\n\n    let clear = JSON.parse(cleartxt)\n\n    if (!(YY in clear)) {\n        clear[YY] = {};\n    }\n    if (! (MM in clear[YY])) {\n        clear[YY][MM] = {};\n    }\n    clear[YY][MM][DD] = root;\n    return encryptData(JSON.stringify(clear), password);\n}","import axios from \"axios\";\n\nexport async function commitFile(repository, branch, filePath, content, pat) {\n    const accessToken = pat;\n    try {\n        // Get reference SHA\n        const refResponse = await axios.get(\n            `https://api.github.com/repos/${repository}/contents/${filePath}`,\n            {\n                headers: {\n                    Authorization: `Token ${accessToken}`\n                }\n            }\n        );\n        \n        const refSha = refResponse.data.sha;\n        \n        await axios.put(\n            `https://api.github.com/repos/${repository}/contents/${filePath}`,\n            {\n                message: \"commit from js\",\n                content: btoa(content),\n                sha: refSha\n            },\n            {\n                headers: {\n                    Authorization: `Token ${accessToken}`\n                    }\n            }\n        )\n    } catch (error) {\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\n","import { useState, useEffect} from \"react\";\nimport { getDataFromStruct, addDataToStruct, delDataFromStruct } from \"../data/handle.js\";\nimport {commitFile} from \"../gh/gh.js\"\nimport { decryptData} from \"../enc/crypt.js\"\n\n\nconst FormScreen = props => {\n    const [food, setFood] = useState(0);\n    const [sport, setSport] = useState(0);\n    const [alcool, setAlcool] = useState(0);\n    const [tabac, setTabac] = useState(0);\n    const [sleep, setSleep] = useState(0);\n    const [mood, setMood] = useState(0);\n    const [weight, setWeight] = useState(0);\n\n\n    useEffect(() => {\n        getDataFromStruct(props.db.d2, props.date, props.password)\n            .then(function(data){\n                setFood(data.f);\n                setSport(data.s);\n                setAlcool(data.a);\n                setTabac(data.t);\n                setSleep(data.sl);\n                setMood(data.m);\n                setWeight(data.w);\n            })\n      }, [props.db.d2, props.date, props.password]);\n\n     async function handleCommitClick () {\n        const repository = \"sandrolex/sandrolex.github.io\";\n        const branch = \"main\";\n        const filePath = \"db.json\";\n        const content = JSON.stringify(props.db);\n        const pat = decryptData(props.db.d1, props.password);\n        if (!await commitFile(repository, branch, filePath, content, pat)) {\n            props.msgHandler(\"Error: could not commit file\", true);\n        } else {\n            props.msgHandler(\"Commit SUCCESS\", false);\n        }\n    }\n\n    const handleAddClick = () => {\n        const data = {\n            food: parseInt(food), \n            sport: parseInt(sport), \n            alcool: parseInt(alcool), \n            tabac: parseInt(tabac), \n            sleep: parseInt(sleep),\n            mood: parseInt(mood),\n            weight: parseInt(weight),\n            date: props.date\n        }\n        props.db.d2 = addDataToStruct(props.db.d2, data, props.password);\n        props.msgHandler(\"Add SUCCESS\", false);\n    }\n    const handleDelClick = () => {\n        props.db.d2 = delDataFromStruct(props.db.d2, props.date, props.password);\n        props.msgHandler(\"Del SUCCESS\", false);\n    }\n\n\n    return (\n        <div>\n            <p>{props.date.toLocaleDateString('en-GB')}</p> \n            <div>\n                Food: \n                <input type=\"radio\" value=\"1\" name=\"food\" checked={food === 1} onChange={(e) => setFood(parseInt(e.target.value))}/>1\n                <input type=\"radio\" value=\"2\" name=\"food\" checked={food === 2} onChange={(e) => setFood(parseInt(e.target.value))}/>2\n                <input type=\"radio\" value=\"3\" name=\"food\" checked={food === 3} onChange={(e) => setFood(parseInt(e.target.value))}/> 3\n            </div>\n            <div>\n                Sport: \n                <input type=\"radio\" value=\"1\" name=\"sport\" checked={sport === 1} onChange={(e) => setSport(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"sport\" checked={sport === 2} onChange={(e) => setSport(parseInt(e.target.value))}/> 2\n                <input type=\"radio\" value=\"3\" name=\"sport\" checked={sport === 3} onChange={(e) => setSport(parseInt(e.target.value))}/> 3\n            </div>\n            <div>\n                Alcool: \n                <input type=\"radio\" value=\"1\" name=\"alcool\" checked={alcool === 1} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"alcool\" checked={alcool === 2} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 2\n                <input type=\"radio\" value=\"3\" name=\"alcool\" checked={alcool === 3} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 3\n            </div>\n            <div>\n                Tabac: \n                <input type=\"radio\" value=\"1\" name=\"tabac\" checked={tabac === 1} onChange={(e) => setTabac(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"tabac\" checked={tabac === 2} onChange={(e) => setTabac(parseInt(e.target.value))}/> 2\n            </div>\n            <div>\n                Sleep: \n                <input type=\"radio\" value=\"1\" name=\"sleep\" checked={sleep === 1} onChange={(e) => setSleep(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"sleep\" checked={sleep === 2} onChange={(e) => setSleep(parseInt(e.target.value))}/> 2\n            </div>\n            <div>\n                Mood: \n                <input type=\"radio\" value=\"1\" name=\"mood\" checked={mood === 1} onChange={(e) => setMood(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"mood\" checked={mood === 2} onChange={(e) => setMood(parseInt(e.target.value))}/> 2\n            </div>\n            <div>\n                Weight: \n                <input type=\"text\" name=\"weight\" value={weight.toString()} onChange={(e) => setWeight(parseInt(e.target.value))}/>\n            </div>\n            <div>\n                <button onClick={handleAddClick}>Add</button>\n                &nbsp;\n                <button onClick={handleDelClick}>Del</button>\n                &nbsp;\n                <button onClick={handleCommitClick}>Commit</button>\n                <br/>\n                <br/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default FormScreen;\n","const Message = props => {\n    if (props.message === \"\") {\n        return (<></>);\n    }\n    let msgClass = (props.error) ? \"error-message\" : \"ok-message\";\n    let textClass = (props.error) ? \"error-text\" : \"ok-text\";\n    \n    return (\n        <div className={msgClass}>\n            <span className={textClass}>{props.message}</span>\n        </div>\n    );\n}\n\nexport default Message;","import { useState } from \"react\";\nimport Calendar from 'moedim';\nimport FormScreen from \"./FormScreen\";\nimport Message from \"./Message\";\n\n\nconst EditScreen = props => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [error, setError] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    \n    const ReceiveDate = (data) => {\n        setSelectedDate(data);\n        setError(false);\n        setMessage(\"\");\n    }\n\n    const msgHandler = (message, error) => {\n        if (message !== \"\") {\n            setMessage(message);\n            setError(error);\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <Calendar value={selectedDate} onChange={(d) => { ReceiveDate(d) } }/>\n            \n            <FormScreen \n                date={selectedDate} \n                db={props.db} \n                password={props.password}\n                msgHandler={msgHandler}\n            />\n            \n            <Message message={message} error={error} />\n        </div>\n    );\n}\n\n\nexport default EditScreen;","import { useState, useEffect } from \"react\";\nimport { decryptData} from \"./enc/crypt.js\"\n\nimport Login from \"./Login/Login\"\nimport EditScreen from \"./Screens/EditScreen\"\n\nfunction App() {\n  const [password, setPassword] = useState(\"\");\n  const [db, setDb] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(\"false\");\n\n  const loginCallback = (data) => {\n    setPassword(data);\n    const verif = decryptData(db.d3, data);\n    if (verif === \"true\") {\n      setLoggedIn(\"true\");\n    } else {\n      console.log(\"failed\")\n    }\n  }\n\n  useEffect(() => {\n    const host = window.location.host;\n    let protocol = \"http://\";\n    if (host.includes(\"github\") ) {\n      protocol = \"https://\";\n    }\n    const dbUrl = protocol + host + '/db.json';\n    fetch(dbUrl).then(\n\t\t  function (res) {\n\t\t\t  return res.json();\n\t\t  },\n    ).then(function (data) {\n      // store Data in State db Variable\n      setDb(data);\n    }).catch(\n      function (err) {\n        console.log(err, ' error');\n      },\n    );\n  }, []);\n    \n  if (loggedIn === \"false\") {\n    return (\n      <Login loginCallback={loginCallback} d3={db.d3}/>\n    )\n  } else {\n    return (\n    <div className=\"container\">\n      <EditScreen \n          password={password}\n          db={db}\n        />\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}