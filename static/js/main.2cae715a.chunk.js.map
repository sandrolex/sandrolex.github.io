{"version":3,"sources":["enc/crypt.js","enc/jwt.js","Screens/Version.js","Screens/Login.js","data/handle.js","gh/gh.js","Screens/FormScreen.js","Screens/Message.js","Screens/EditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["toBase64String","words","CryptoJS","enc","Base64","stringify","encryptData","input","key","secret_key","SHA256","iv","lib","WordArray","random","options","mode","CBC","body","AES","encrypt","concat","ciphertext","decryptData","packet","parse","start","length","end","create","slice","parsed_iv","decrypted","decrypt","Utf8","verifyJwt","ljwt","lpubkey","out","spki","jose","publicKey","payload","version","console","log","Version","props","useState","setVersion","useEffect","db","d4","d5","lversion","getVersion","className","Login","password","setPassword","handleSubmit","e","preventDefault","loginCallback","onSubmit","value","onChange","target","name","type","month","getDataFromStruct","d2","date","cleartxt","clearjson","JSON","YY","getFullYear","MM","getMonth","DD","getDate","root","f","s","a","t","sl","m","si","w","commitFile","repository","branch","filePath","content","pat","accessToken","axios","get","headers","Authorization","refResponse","refSha","data","sha","put","message","btoa","error","FormScreen","food","setFood","sport","setSport","alcool","setAlcool","tabac","setTabac","sleep","setSleep","mood","setMood","sick","setSick","weight","setWeight","d1","msgHandler","then","htmlFor","toLocaleDateString","checked","parseInt","size","toString","isNaN","handleWeight","onClick","clear","addDataToStruct","delDataFromStruct","Message","msgClass","textClass","EditScreen","Date","selectedDate","setSelectedDate","setError","setMessage","d","App","setDb","loggedIn","setLoggedIn","host","window","location","protocol","includes","fetch","res","json","catch","err","d3","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2cae715a.chunk.js","sourcesContent":["import CryptoJS from \"crypto-js\";\n\n\nfunction toString(words){\n    return CryptoJS.enc.Utf8.stringify(words);\n}\n\nfunction toBase64String(words){\n    return CryptoJS.enc.Base64.stringify(words);\n}\n\nexport function encryptData(input, key){\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n    var options = {\n        iv: iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var body = CryptoJS.AES.encrypt(input, secret_key, options);\n    iv.concat(body.ciphertext);\n    return toBase64String(iv);\n}\n\nexport function decryptData(input, key){\n    var packet = CryptoJS.enc.Base64.parse(input);\n\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n\n    var start = iv.words.length;\n    var end = packet.words.length;\n    \n    var ciphertext = CryptoJS.lib.WordArray.create(packet.words.slice(start, end));\n    var parsed_iv = CryptoJS.lib.WordArray.create(packet.words.slice(0, iv.words.length+1));\n    ciphertext = toBase64String(ciphertext);\n    var options = {\n        iv: parsed_iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var decrypted = CryptoJS.AES.decrypt(ciphertext, secret_key, options);\n\n    return toString(decrypted);\n}","import * as jose from 'jose'\n\nexport async function verifyJwt(ljwt, lpubkey) {\n    let out = \"\";\n    if (ljwt && lpubkey) {\n        const alg = 'RS256';\n        const spki = lpubkey;\n        const publicKey = await jose.importSPKI(spki, alg);\n        try {\n            const { payload  } = await jose.jwtVerify(ljwt, publicKey);\n            out = payload.version;\n        } catch (err) {\n            out = \"FAILED\";\n            console.log(\"FAILED\");\n        }\n    }\n    return out;\n}\n","import { useState, useEffect } from \"react\";\nimport { verifyJwt } from \"../enc/jwt\";\n\nconst Version = props => {\n    const [version, setVersion] = useState(\"\");\n    useEffect(() => {\n        async function getVersion() { \n            const lversion = await verifyJwt(props.db.d4, props.db.d5);\n            setVersion(lversion);\n        };\n        if (!version) {\n            getVersion();\n        }\n    }, [props.db.d4, props.db.d5, version, setVersion]);\n    \n    return (\n        <div>\n            <span className=\"version\">{version}</span>\n        </div>\n    );\n}\n\nexport default Version;","import { useState } from \"react\";\nimport Version from \"./Version\";\nconst Login = props => {\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        props.loginCallback(password);\n    }\n    return (\n        <div className=\"card\">\n             <form onSubmit={handleSubmit}>\n                <input\n                    value={password}\n                    onChange={({ target }) => {\n                        setPassword(target.value);\n                    }}\n                    name=\"password\"\n                    type=\"text\"\n                />\n                \n                <button \n                    className=\"btn submit-btn\" \n                    type=\"submit\"\n                >\n                    Go\n                </button>\n            </form>\n            <Version db={props.db}/>\n        </div>\n    );\n}\n\nexport default Login;","import { decryptData, encryptData } from \"../enc/crypt.js\"\n\nconst month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n\nexport const getDataFromStruct = async (d2, date, password) => {\n    const cleartxt = decryptData(d2, password);\n    const clearjson = JSON.parse(cleartxt);\n    const YY = date.getFullYear();\n    const MM = month[date.getMonth()];\n    const DD = date.getDate();\n    const root = {\n        f: 0,\n        s: 0,\n        a: 0,\n        t: 0,\n        sl: 0,\n        m: 0,\n        si: 0,\n        w: 0,\n    }\n    if (!(YY in clearjson)) {\n        return root;\n    }\n    if (! (MM in clearjson[YY])) {\n        return root;\n    }\n    if (! (DD in clearjson[YY][MM])) {\n        return root;\n    }\n    return clearjson[YY][MM][DD];\n}\n\nexport const delDataFromStruct = (d2, date, password) => {\n    const cleartxt = decryptData(d2, password);\n    let clear = JSON.parse(cleartxt);\n    const YY = date.getFullYear();\n    const MM = month[date.getMonth()];\n    const DD = date.getDate();\n    if (!(YY in clear)) {\n        return d2;\n    }\n    if (! (MM in clear[YY])) {\n        return d2;\n    }\n    delete clear[YY][MM][DD];\n    return encryptData(JSON.stringify(clear), password);\n}\n\nexport const addDataToStruct = (d2, data, password) => {\n    const cleartxt = decryptData(d2, password);\n    const YY = data.date.getFullYear();\n    const MM = month[data.date.getMonth()];\n    const DD = data.date.getDate();\n    const root = {\n        f: data.food,\n        s: data.sport,\n        a: data.alcool,\n        t: data.tabac,\n        sl: data.sleep,\n        m: data.mood,\n        si: data.sick,\n        w: data.weight,\n    }\n\n    let clear = JSON.parse(cleartxt)\n\n    if (!(YY in clear)) {\n        clear[YY] = {};\n    }\n    if (! (MM in clear[YY])) {\n        clear[YY][MM] = {};\n    }\n    clear[YY][MM][DD] = root;\n    return encryptData(JSON.stringify(clear), password);\n}","import axios from \"axios\";\n\nexport async function commitFile(repository, branch, filePath, content, pat) {\n    const accessToken = pat;\n    try {\n        // Get reference SHA\n        const refResponse = await axios.get(\n            `https://api.github.com/repos/${repository}/contents/${filePath}`,\n            {\n                headers: {\n                    Authorization: `Token ${accessToken}`\n                }\n            }\n        );\n        \n        const refSha = refResponse.data.sha;\n        \n        await axios.put(\n            `https://api.github.com/repos/${repository}/contents/${filePath}`,\n            {\n                message: \"commit from js\",\n                content: btoa(content),\n                sha: refSha\n            },\n            {\n                headers: {\n                    Authorization: `Token ${accessToken}`\n                    }\n            }\n        )\n    } catch (error) {\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\n","import { useState, useEffect} from \"react\";\nimport { getDataFromStruct, addDataToStruct, delDataFromStruct } from \"../data/handle.js\";\nimport {commitFile} from \"../gh/gh.js\"\nimport { decryptData} from \"../enc/crypt.js\"\n\n\nconst FormScreen = props => {\n    const [food, setFood] = useState(0);\n    const [sport, setSport] = useState(0);\n    const [alcool, setAlcool] = useState(0);\n    const [tabac, setTabac] = useState(0);\n    const [sleep, setSleep] = useState(0);\n    const [mood, setMood] = useState(0);\n    const [sick, setSick] = useState(1);\n    const [weight, setWeight] = useState(0);\n\n\n    useEffect(() => {\n        getDataFromStruct(props.db.d2, props.date, props.password)\n            .then(function(data){\n                setFood(data.f);\n                setSport(data.s);\n                setAlcool(data.a);\n                setTabac(data.t);\n                setSleep(data.sl);\n                setMood(data.m);\n                setWeight(data.w);\n                setSick(data.si);\n            })\n      }, [props.db.d2, props.date, props.password]);\n\n     async function handleCommitClick () {\n        const repository = \"sandrolex/sandrolex.github.io\";\n        const branch = \"main\";\n        const filePath = \"db.json\";\n        const content = JSON.stringify(props.db);\n        const pat = decryptData(props.db.d1, props.password);\n        if (!await commitFile(repository, branch, filePath, content, pat)) {\n            props.msgHandler(\"Error: could not commit file\", true);\n        } else {\n            props.msgHandler(\"Commit SUCCESS\", false);\n        }\n    }\n\n    const handleAddClick = () => {\n        const data = {\n            food: parseInt(food), \n            sport: parseInt(sport), \n            alcool: parseInt(alcool), \n            tabac: parseInt(tabac), \n            sleep: parseInt(sleep),\n            mood: parseInt(mood),\n            weight: parseInt(weight),\n            sick: parseInt(sick),\n            date: props.date\n        }\n        props.db.d2 = addDataToStruct(props.db.d2, data, props.password);\n        props.msgHandler(\"Add SUCCESS\", false);\n    }\n    const handleDelClick = () => {\n        props.db.d2 = delDataFromStruct(props.db.d2, props.date, props.password);\n        props.msgHandler(\"Del SUCCESS\", false);\n    }\n\n    const handleWeight = (value) => {\n        const w = parseInt(value);\n        if (isNaN(w)) { setWeight(0) }\n        else {setWeight(w)}\n    }\n\n\n    return (\n        <div>\n            <p>\n                <label htmlFor=\"date\" className=\"form-label\">{props.date.toLocaleDateString('en-GB')}</label>\n            </p> \n            <div className=\"form-div\">\n                <label htmlFor=\"food\" className=\"form-label\">Food: </label>\n                <input type=\"radio\" value=\"1\" name=\"food\" checked={food === 1} onChange={(e) => setFood(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" value=\"2\" name=\"food\" checked={food === 2} onChange={(e) => setFood(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n                <input type=\"radio\" value=\"3\" name=\"food\" checked={food === 3} onChange={(e) => setFood(parseInt(e.target.value))}/> 3&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"sport\" className=\"form-label\">Sport: </label>\n                <input type=\"radio\" value=\"1\" name=\"sport\" checked={sport === 1} onChange={(e) => setSport(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" value=\"2\" name=\"sport\" checked={sport === 2} onChange={(e) => setSport(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n                <input type=\"radio\" value=\"3\" name=\"sport\" checked={sport === 3} onChange={(e) => setSport(parseInt(e.target.value))}/> 3&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"alcool\" className=\"form-label\">Alcool: </label>\n                <input type=\"radio\" value=\"1\" name=\"alcool\" checked={alcool === 1} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" value=\"2\" name=\"alcool\" checked={alcool === 2} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n                <input type=\"radio\" value=\"3\" name=\"alcool\" checked={alcool === 3} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 3&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"tabac\" className=\"form-label\">Tabac: </label>\n                <input type=\"radio\" value=\"1\" name=\"tabac\" checked={tabac === 1} onChange={(e) => setTabac(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" value=\"2\" name=\"tabac\" checked={tabac === 2} onChange={(e) => setTabac(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"sleep\" className=\"form-label\">Sleep: </label>\n                <input type=\"radio\" value=\"1\" name=\"sleep\" checked={sleep === 1} onChange={(e) => setSleep(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" value=\"2\" name=\"sleep\" checked={sleep === 2} onChange={(e) => setSleep(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n                <input type=\"radio\" value=\"3\" name=\"sleep\" checked={sleep === 3} onChange={(e) => setSleep(parseInt(e.target.value))}/> 3&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"mood\" className=\"form-label\">Mood: </label>\n                <input type=\"radio\" className=\"form-input\" value=\"1\" name=\"mood\" checked={mood === 1} onChange={(e) => setMood(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" className=\"form-input\" value=\"2\" name=\"mood\" checked={mood === 2} onChange={(e) => setMood(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n                <input type=\"radio\" className=\"form-input\" value=\"3\" name=\"mood\" checked={mood === 3} onChange={(e) => setMood(parseInt(e.target.value))}/> 3&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"sick\" className=\"form-label\">Sick: </label>\n                <input type=\"radio\" className=\"form-input\" value=\"1\" name=\"sick\" checked={sick === 1} onChange={(e) => setSick(parseInt(e.target.value))}/> 1&nbsp;&nbsp;\n                <input type=\"radio\" className=\"form-input\" value=\"2\" name=\"sick\" checked={sick === 2} onChange={(e) => setSick(parseInt(e.target.value))}/> 2&nbsp;&nbsp;\n            </div>\n            <div className=\"form-div\">\n            <label htmlFor=\"weight\" className=\"form-label\">Weight: </label>\n                <input className=\"form-input\" type=\"text\" name=\"weight\" size=\"3\" value={weight.toString()} onChange={(e) => handleWeight(e.target.value)}/>\n            </div>\n            <div className=\"form-div\">\n                <button className=\"btn submit-btn\" onClick={handleAddClick}>Add</button>\n                &nbsp;&nbsp;\n                <button className=\"btn submit-btn\" onClick={handleDelClick}>Del</button>\n                <br/>\n                <button className=\"btn submit-btn\" onClick={handleCommitClick}>Commit</button>\n                <br/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default FormScreen;\n","const Message = props => {\n    if (props.message === \"\") {\n        return (<></>);\n    }\n    let msgClass = (props.error) ? \"error-message\" : \"ok-message\";\n    let textClass = (props.error) ? \"error-text\" : \"ok-text\";\n    \n    return (\n        <div className={msgClass}>\n            <span className={textClass}>{props.message}</span>\n        </div>\n    );\n}\n\nexport default Message;","import { useState } from \"react\";\nimport Calendar from 'moedim';\nimport FormScreen from \"./FormScreen\";\nimport Message from \"./Message\";\nimport Version from \"./Version\";\n\n\nconst EditScreen = props => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [error, setError] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    \n    const ReceiveDate = (data) => {\n        setSelectedDate(data);\n        setError(false);\n        setMessage(\"\");\n    }\n\n    const msgHandler = (message, error) => {\n        if (message !== \"\") {\n            setMessage(message);\n            setError(error);\n        }\n    }\n\n    return (\n        <div className=\"card\">\n            <Calendar value={selectedDate} onChange={(d) => { ReceiveDate(d) } }/>\n            <FormScreen \n                date={selectedDate} \n                db={props.db} \n                password={props.password}\n                msgHandler={msgHandler}\n            />\n            <Message message={message} error={error} />\n            <Version db={props.db} />\n        </div>\n    );\n}\n\n\nexport default EditScreen;","import { useState, useEffect } from \"react\";\nimport { decryptData} from \"./enc/crypt.js\"\n// import * as jose from 'jose'\n\nimport Login from \"./Screens/Login\"\nimport EditScreen from \"./Screens/EditScreen\"\n\nfunction App() {\n  const [password, setPassword] = useState(\"\");\n  const [db, setDb] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(\"false\");\n  // const [version, setVersion] = useState(\"FAILED\");\n  // const [jwt, setJwt] = useState(\"\");\n  // const [pubkey, setPubkey] = useState(\"\");\n\n  const loginCallback = (data) => {\n    setPassword(data);\n    const verif = decryptData(db.d3, data);\n    if (verif === \"true\") {\n      setLoggedIn(\"true\");\n    } else {\n      console.log(\"failed\")\n    }\n  }\n\n  // async function verifyJwt(ljwt, lpubkey) {\n  //   console.log(\"XXXX here\", ljwt, lpubkey);\n  //   if (ljwt !== \"\" && lpubkey !== \"\") {\n  //     console.log(\"GOING TO VERIFY XXX\");\n  //     const alg = 'RS256';\n  //     const spki = lpubkey.key;\n  //     const publicKey = await jose.importSPKI(spki, alg);\n  //     try {\n  //       // const { payload, protectedHeader } = await jose.jwtVerify(ljwt, publicKey);\n  //       const { payload  } = await jose.jwtVerify(ljwt, publicKey);\n  //       setVersion(payload.version);\n  //       console.log(\"PAYLOAD VERSION\", payload.version);\n\n  //     } catch (err) {\n  //       console.log(\"FAILED\");\n  //       setVersion(\"FAILED\");\n  //     }\n  //   }\n  // }\n\n \n\n  useEffect(() => {\n    const host = window.location.host;\n    let protocol = \"http://\";\n    if (host.includes(\"github\") ) {\n      protocol = \"https://\";\n    }\n    const dbUrl = protocol + host + '/db.json';\n    fetch(dbUrl).then(\n\t\t  function (res) {\n\t\t\t  return res.json();\n\t\t  },\n    ).then(function (data) {\n      // store Data in State db Variable\n      setDb(data);\n    }).catch(\n      function (err) {\n        console.log(err, ' error gettng db.json');\n      },\n    );\n\n    // \n    // const jwtUrl = protocol + host + '/version.jwt';\n    // fetch(jwtUrl).then(\n\t\t//   function (res) {\n\t\t// \t  return res.text();\n\t\t//   },\n    // ).then(function (data) {\n    //   setJwt(data);\n    // }).catch(\n    //   function (err) {\n    //     console.log(err, ' error getting version.jwt');\n    //   },\n    // );\n\n\n    // const pubkeyUrl = protocol + host + '/.well-known/jwks.json';\n    // fetch(pubkeyUrl).then(\n\t\t//   function (res) {\n\t\t// \t  return res.json();\n\t\t//   },\n    // ).then(function (data) {\n    //   setVersion(\";a;a;\")\n    //   setPubkey(data);\n    //   // setVersion(\"lalal\");\n    //   console.log(\"KEY\", data.key);\n    // }).catch(\n    //   function (err) {\n    //     console.log(err, ' error getting version.json');\n    //   },\n    // );\n\n  }, []);\n    \n  \n\n  if (loggedIn === \"false\") {\n    return (\n      <Login loginCallback={loginCallback} db={db}/>\n    )\n  } else {\n    return (\n    <div className=\"container\">\n      <EditScreen \n          password={password}\n          db={db}\n        />\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}