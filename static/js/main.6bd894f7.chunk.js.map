{"version":3,"sources":["enc/crypt.js","App.js","reportWebVitals.js","index.js"],"names":["toBase64String","words","CryptoJS","enc","Base64","stringify","decryptData","input","key","packet","parse","secret_key","SHA256","iv","lib","WordArray","random","start","length","end","ciphertext","create","slice","parsed_iv","options","mode","CBC","decrypted","AES","decrypt","Utf8","App","useState","text","setText","pass","setPass","screen","setScreen","db","setDb","encrptedData","setEncrptedData","decrptedData","setDecrptedData","fetch","then","res","json","data","catch","err","console","log","switchScreen","type","handleClick","body","encrypt","concat","encryptData","d2","className","style","backgroundColor","onClick","value","name","onChange","target","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6bd894f7.chunk.js","sourcesContent":["import CryptoJS from \"crypto-js\";\n\n\nfunction toString(words){\n    return CryptoJS.enc.Utf8.stringify(words);\n}\n\nfunction toBase64String(words){\n    return CryptoJS.enc.Base64.stringify(words);\n}\n\nexport function encryptData(input, key){\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n    var options = {\n        iv: iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var body = CryptoJS.AES.encrypt(input, secret_key, options);\n    iv.concat(body.ciphertext);\n    return toBase64String(iv);\n}\n\nexport function decryptData(input, key){\n    var packet = CryptoJS.enc.Base64.parse(input);\n\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n\n    var start = iv.words.length;\n    var end = packet.words.length;\n    \n    var ciphertext = CryptoJS.lib.WordArray.create(packet.words.slice(start, end));\n    var parsed_iv = CryptoJS.lib.WordArray.create(packet.words.slice(0, iv.words.length+1));\n    ciphertext = toBase64String(ciphertext);\n    var options = {\n        iv: parsed_iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var decrypted = CryptoJS.AES.decrypt(ciphertext, secret_key, options);\n\n    return toString(decrypted);\n}","import { useState } from \"react\";\nimport {encryptData, decryptData} from \"./enc/crypt.js\"\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [screen, setScreen] = useState(\"encrypt\");\n  const [db, setDb] = useState(null);\n\n  const [encrptedData, setEncrptedData] = useState(\"\");\n  const [decrptedData, setDecrptedData] = useState(\"\");\n\n  // Fetch Function\n\tfetch('./db.json').then(\n\t\tfunction (res) {\n\t\t\treturn res.json();\n\t\t},\n\t).then(function (data) {\n\t\t// store Data in State db Variable\n\t\tsetDb(data);\n\t}).catch(\n\t\tfunction (err) {\n\t\t\tconsole.log(err, ' error');\n\t\t},\n\t);\n\n  const switchScreen = (type) => {\n    setText(\"\");\n    setEncrptedData(\"\");\n    setDecrptedData(\"\");\n    setScreen(type);\n  };\n\n  const handleClick = () => {\n    if (!text) return;\n\n    if (screen === \"encrypt\") setEncrptedData(encryptData(text, pass));\n    else { \n      setDecrptedData(decryptData(text, pass));\n      console.log(\"RAW\", db);\n      console.log(\"XXXX\", decryptData(db.d2, pass));\n    }\n  };\n\n  const editScreen = () => {\n    return (\n      <div className=\"card\">\n        <input\n          value={decryptData(db.d2, pass)}\n          name=\"edit\"\n          type=\"text\"\n        />\n      </div>\n    )\n  }\n  const cryptScreen = () => {\n    return (\n      <div className=\"card\">\n          <input\n            value={text}\n            onChange={({ target }) => {\n              setText(target.value);\n            }}\n            name=\"text\"\n            type=\"text\"\n            placeholder={\n              screen === \"encrypt\" ? \"Enter Text\" : \"Enter Encrypted Data\"\n            }\n          />\n          <input\n            value={pass}\n            onChange={({ target }) => {\n              setPass(target.value);\n            }}\n            name=\"pass\"\n            type=\"text\"\n            placeholder=\"secret\"\n          />\n\n          <button className=\"btn submit-btn\" onClick={handleClick}>\n            {screen === \"encrypt\" ? \"Encrypt\" : \"Decrypt\"}\n          </button>\n        </div>\n\n    )\n  }\n\n  const frameScreen = () => {\n    return (\n      <div className=\"container\">\n        <div>\n          <button\n            className=\"btn btn-left\"\n            style={{\n              backgroundColor: screen === \"encrypt\" ? \"#5e35b1\" : \"#5e35b130\",\n            }}\n            onClick={() => {\n              switchScreen(\"encrypt\");\n            }}\n          >\n            Encrypt\n          </button>\n\n          <button\n            className=\"btn btn-right\"\n            style={{\n              backgroundColor: screen === \"decrypt\" ? \"#1e88e5\" : \"#1e88e530\",\n            }}\n            onClick={() => {\n              switchScreen(\"decrypt\");\n            }}\n          >\n            Decrypt\n          </button>\n          \n          <button\n            className=\"btn btn-right\"\n            style={{\n              backgroundColor: screen === \"edit\" ? \"#1e88e5\" : \"#1e88e530\",\n            }}\n            onClick={() => {\n              switchScreen(\"edit\");\n            }}\n          >\n            Edit\n          </button>\n\n        </div>\n        {screen === \"edit\" ? editScreen() : cryptScreen()}\n        {encrptedData || decrptedData ? (\n          <div className=\"content\">\n            <label>{screen === \"encrypt\" ? \"Encrypted\" : \"Decrypted\"} Data</label>\n            <p>{screen === \"encrypt\" ? encrptedData : decrptedData}</p>\n          </div>\n        ) : null}\n      </div>\n    );\n    }\n    return frameScreen();\n      \n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}