{"version":3,"sources":["enc/crypt.js","gh/gh.js","Login/Login.js","Screens/FormScreen.js","Screens/EditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["toBase64String","words","CryptoJS","enc","Base64","stringify","encryptData","input","key","secret_key","SHA256","iv","lib","WordArray","random","options","mode","CBC","body","AES","encrypt","concat","ciphertext","decryptData","packet","parse","start","length","end","create","slice","parsed_iv","decrypted","decrypt","Utf8","repository","branch","filePath","content","pat","accessToken","console","log","axios","get","headers","Authorization","refResponse","refSha","data","sha","put","message","btoa","error","Login","SendPassword","useState","password","setPassword","className","value","onChange","target","name","type","onClick","FormScreen","props","food","setFood","sport","setSport","alcool","setAlcool","tabac","setTabac","sleep","setSleep","mood","setMood","weight","setWeight","date","toLocaleDateString","e","EditScreen","Date","setDate","d","App","text","setText","screen","setScreen","db","setDb","clearDb","setClearDb","loggedIn","setLoggedIn","encrptedData","setEncrptedData","decrptedData","setDecrptedData","useEffect","host","window","location","protocol","includes","fetch","then","res","json","catch","err","switchScreen","handleClick","d2","handleSaveDbClick","commitFile","JSON","d1","showScreen","selection","placeholder","d3","style","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d0fee0d4.chunk.js","sourcesContent":["import CryptoJS from \"crypto-js\";\n\n\nfunction toString(words){\n    return CryptoJS.enc.Utf8.stringify(words);\n}\n\nfunction toBase64String(words){\n    return CryptoJS.enc.Base64.stringify(words);\n}\n\nexport function encryptData(input, key){\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n    var options = {\n        iv: iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var body = CryptoJS.AES.encrypt(input, secret_key, options);\n    iv.concat(body.ciphertext);\n    return toBase64String(iv);\n}\n\nexport function decryptData(input, key){\n    var packet = CryptoJS.enc.Base64.parse(input);\n\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n\n    var start = iv.words.length;\n    var end = packet.words.length;\n    \n    var ciphertext = CryptoJS.lib.WordArray.create(packet.words.slice(start, end));\n    var parsed_iv = CryptoJS.lib.WordArray.create(packet.words.slice(0, iv.words.length+1));\n    ciphertext = toBase64String(ciphertext);\n    var options = {\n        iv: parsed_iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var decrypted = CryptoJS.AES.decrypt(ciphertext, secret_key, options);\n\n    return toString(decrypted);\n}","import axios from \"axios\";\n\nexport async function commitFile(repository, branch, filePath, content, pat) {\n    const accessToken = pat;\n    console.log(\"AT\", accessToken);\n    try {\n    // Get reference SHA\n    const refResponse = await axios.get(\n        `https://api.github.com/repos/${repository}/contents/${filePath}`,\n        {\n            headers: {\n                Authorization: `Token ${accessToken}`\n            }\n        }\n    );\n    \n    const refSha = refResponse.data.sha;\n    \n    await axios.put(\n        `https://api.github.com/repos/${repository}/contents/${filePath}`,\n        {\n            message: \"commit from js\",\n            content: btoa(content),\n            sha: refSha\n        },\n        {\n            headers: {\n                Authorization: `Token ${accessToken}`\n                }\n        }\n    )\n    \n    console.log(\"File committed successfully!\");\n    } catch (error) {\n    console.error(error);\n}\n}\n\n","import { useState } from \"react\";\n\nfunction Login({SendPassword}) {\n    const [password, setPassword] = useState(\"\");\n\n    return (\n        <div className=\"card\">\n            <input\n                value={password}\n                onChange={({ target }) => {\n                    setPassword(target.value);\n                }}\n                name=\"password\"\n                type=\"text\"\n            />\n            \n            <button \n                className=\"btn submit-btn\" \n                onClick={() => SendPassword(password) }\n            >\n                Go\n            </button>\n        </div>\n    );\n}\n\nexport default Login;","import { useState} from \"react\";\n\nconst FormScreen = props => {\n    const [food, setFood] = useState(0);\n    const [sport, setSport] = useState(0);\n    const [alcool, setAlcool] = useState(0);\n    const [tabac, setTabac] = useState(0);\n    const [sleep, setSleep] = useState(0);\n    const [mood, setMood] = useState(0);\n    const [weight, setWeight] = useState(0);\n\n\n    const handleClick = () => {\n        const data = {\n            food: food,\n            sport: sport,\n            alcool: alcool,\n            tabac: tabac,\n            sleep: sleep,\n            mood: mood,\n            weight: weight,\n            date: props.date\n        }\n        console.log(\"XXX\", data);\n    }\n\n    return (\n        <div>\n            <p>{props.date.toLocaleDateString('en-GB')}</p> \n            <div onChange={(e) => setFood(e.target.value)}>\n                Food: \n                <input type=\"radio\" value=\"1\" name=\"food\" /> 1\n                <input type=\"radio\" value=\"2\" name=\"food\" /> 2\n                <input type=\"radio\" value=\"3\" name=\"food\" /> 3\n            </div>\n            <div onChange={(e) => setSport(e.target.value)}>\n                Sport: \n                <input type=\"radio\" value=\"1\" name=\"sport\" /> 1\n                <input type=\"radio\" value=\"2\" name=\"sport\" /> 2\n                <input type=\"radio\" value=\"3\" name=\"sport\" /> 3\n            </div>\n            <div onChange={(e) => setAlcool(e.target.value)}>\n                Alcool: \n                <input type=\"radio\" value=\"1\" name=\"alcool\" /> 1\n                <input type=\"radio\" value=\"2\" name=\"alcool\" /> 2\n                <input type=\"radio\" value=\"3\" name=\"alcool\" /> 3\n            </div>\n            <div onChange={(e) => setTabac(e.target.value)}>\n                Tabac: \n                <input type=\"radio\" value=\"1\" name=\"tabac\" /> 1\n                <input type=\"radio\" value=\"2\" name=\"tabac\" /> 2\n            </div>\n            <div onChange={(e) => setSleep(e.target.value)}>\n                Sleep: \n                <input type=\"radio\" value=\"1\" name=\"sleep\" /> 1\n                <input type=\"radio\" value=\"2\" name=\"sleep\" /> 2\n            </div>\n            <div onChange={(e) => setMood(e.target.value)}>\n                Mood: \n                <input type=\"radio\" value=\"1\" name=\"mood\" /> 1\n                <input type=\"radio\" value=\"2\" name=\"mood\" /> 2\n            </div>\n            <div onChange={(e) => setWeight(e.target.value)}>\n                Weight: \n                <input type=\"text\" name=\"weight\"/>\n            </div>\n            <button onClick={handleClick}>Save</button>\n        </div>\n    );\n}\n\nexport default FormScreen;\n","import { useState} from \"react\";\nimport Calendar from 'moedim';\nimport FormScreen from \"./FormScreen\";\n\nfunction EditScreen() {\n    const [date, setDate] = useState(new Date());\n\n    const ReceiveDate = (data) => {\n        setDate(data);\n        console.log(\"SELECTED DATE\", date);\n    }\n\n    return (\n        <div className=\"card\">\n            <Calendar value={date} onChange={(d) => { ReceiveDate(d) } }/>\n            <FormScreen date={date}/>\n        </div>\n    );\n}\n\n\nexport default EditScreen;","import { useState, useEffect } from \"react\";\nimport {encryptData, decryptData} from \"./enc/crypt.js\"\nimport {commitFile} from \"./gh/gh.js\"\nimport Login from \"./Login/Login\"\nimport EditScreen from \"./Screens/EditScreen\"\n\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [screen, setScreen] = useState(\"encrypt\");\n  const [db, setDb] = useState(\"\");\n  const [clearDb, setClearDb] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(\"false\");\n  const [encrptedData, setEncrptedData] = useState(\"\");\n  const [decrptedData, setDecrptedData] = useState(\"\");\n  // const [date, setDate] = useState(new Date())\n\n  const SendPassword = (data) => {\n    setPassword(data);\n    const verif = decryptData(db.d3, password);\n    if (verif === \"true\") {\n      setLoggedIn(\"true\");\n      setScreen(\"edit\");\n    } else {\n      console.log(\"failed\")\n    }\n  }\n\n  // const ReceiveDate = (data) => {\n  //   setDate(data);\n  //   console.log(\"SELECTED DATE\", date);\n  // }\n\n  useEffect(() => {\n    const host = window.location.host;\n    let protocol = \"http://\";\n    if (host.includes(\"github\") ) {\n      protocol = \"https://\";\n    }\n    const dbUrl = protocol + host + '/db.json';\n    fetch(dbUrl).then(\n\t\t  function (res) {\n\t\t\t  return res.json();\n\t\t  },\n    ).then(function (data) {\n      // store Data in State db Variable\n      setDb(data);\n    }).catch(\n      function (err) {\n        console.log(err, ' error');\n      },\n    );\n  }, []);\n\n  const switchScreen = (type) => {\n    setText(\"\");\n    setEncrptedData(\"\");\n    setDecrptedData(\"\");\n    setScreen(type);\n  };\n\n  const handleClick = () => {\n    if (!text) return;\n\n    if (screen === \"encrypt\") setEncrptedData(encryptData(text, password));\n    else { \n      setDecrptedData(decryptData(text, password));\n      console.log(\"RAW\", db);\n      console.log(\"XXXX\", decryptData(db.d2, password));\n    }\n  };\n\n  const handleSaveDbClick = () => {\n    console.log(\"clearDB\", clearDb);\n    db.d2 = encryptData(clearDb, password);\n    console.log(\"cipher\", db);\n    const repository = \"sandrolex/sandrolex.github.io\";\n    const branch = \"main\";\n    const filePath = \"db.json\";\n    const content = JSON.stringify(db);\n    const pat = decryptData(db.d1, password);\n    commitFile(repository, branch, filePath, content, pat)\n  };\n\n  const editScreen = () => {\n    return (\n      <div className=\"card\">\n        <input\n          value={clearDb}\n          name=\"edit\"\n          type=\"text\"\n          onChange={({ target }) => {\n            setClearDb(target.value);\n          }}\n        />\n        <button className=\"btn submit-btn\" onClick={handleSaveDbClick}>\n            Save\n          </button>\n      </div>\n    )\n  }\n  const cryptScreen = () => {\n    return (\n      <div className=\"card\">\n          <input\n            value={text}\n            onChange={({ target }) => {\n              setText(target.value);\n            }}\n            name=\"text\"\n            type=\"text\"\n            placeholder={\n              screen === \"encrypt\" ? \"Enter Text\" : \"Enter Encrypted Data\"\n            }\n          />\n          <input\n            value={password}\n            onChange={({ target }) => {\n              setPassword(target.value);\n            }}\n            name=\"pass\"\n            type=\"text\"\n            placeholder=\"secret\"\n          />\n\n          <button className=\"btn submit-btn\" onClick={handleClick}>\n            {screen === \"encrypt\" ? \"Encrypt\" : \"Decrypt\"}\n          </button>\n          {encrptedData || decrptedData ? (\n          <div className=\"content\">\n            <label>{screen === \"encrypt\" ? \"Encrypted\" : \"Decrypted\"} Data</label>\n            <p>{screen === \"encrypt\" ? encrptedData : decrptedData}</p>\n          </div>\n        ) : null}\n        </div>\n\n    )\n  }\n  \n  const showScreen = (selection) => {\n    if (selection === \"edit\") {\n      return editScreen();\n    } else if (selection === \"calendar\") {\n      return (\n        <EditScreen/>\n      );\n    } \n    return cryptScreen();\n  }\n\n  const frameScreen = () => {\n    return (\n      <div className=\"container\">\n        <div>\n          <button\n            className=\"btn btn-left\"\n            style={{\n              backgroundColor: screen === \"encrypt\" ? \"#5e35b1\" : \"#5e35b130\",\n            }}\n            onClick={() => {\n              switchScreen(\"encrypt\");\n            }}\n          >\n            Encrypt\n          </button>\n\n          <button\n            className=\"btn btn-right\"\n            style={{\n              backgroundColor: screen === \"decrypt\" ? \"#1e88e5\" : \"#1e88e530\",\n            }}\n            onClick={() => {\n              switchScreen(\"decrypt\");\n            }}\n          >\n            Decrypt\n          </button>\n          \n          <button\n            className=\"btn btn-right\"\n            style={{\n              backgroundColor: screen === \"edit\" ? \"#1e88e5\" : \"#1e88e530\",\n            }}\n            onClick={() => {\n              setClearDb(decryptData(db.d2, password));\n              switchScreen(\"edit\");\n            }}\n          >\n            Edit\n          </button>\n\n          <button\n            className=\"btn btn-right\"\n            style={{\n              backgroundColor: screen === \"calendar\" ? \"#1e88e5\" : \"#1e88e530\",\n            }}\n            onClick={() => {\n              switchScreen(\"calendar\");\n            }}\n          >\n            Calendar\n          </button>\n\n        </div>\n        {showScreen(screen)}\n        \n      </div>\n    );\n    }\n    if (loggedIn === \"false\") {\n      return (\n        <Login SendPassword={SendPassword} />\n      )\n    } else {\n      return frameScreen();\n    }\n    \n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}