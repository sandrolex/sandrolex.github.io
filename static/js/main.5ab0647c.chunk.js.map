{"version":3,"sources":["enc/crypt.js","Login/Login.js","data/handle.js","gh/gh.js","Screens/Message.js","Screens/FormScreen.js","Screens/EditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["toBase64String","words","CryptoJS","enc","Base64","stringify","decryptData","input","key","packet","parse","secret_key","SHA256","iv","lib","WordArray","random","start","length","end","ciphertext","create","slice","parsed_iv","options","mode","CBC","decrypted","AES","decrypt","Utf8","Login","props","useState","password","setPassword","handleSubmit","e","preventDefault","loginCallback","className","onSubmit","value","onChange","target","name","type","month","getDataFromStruct","d2","date","cleartxt","clearjson","JSON","YY","getFullYear","MM","getMonth","DD","getDate","root","f","s","a","t","sl","m","w","addDataToStruct","data","food","sport","alcool","tabac","sleep","mood","weight","clear","body","encrypt","concat","encryptData","commitFile","repository","branch","filePath","content","pat","accessToken","axios","get","headers","Authorization","refResponse","refSha","sha","put","message","btoa","console","error","Message","msgClass","textClass","FormScreen","setFood","setSport","setAlcool","setTabac","setSleep","setMood","setWeight","setError","setMessage","db","d1","useEffect","then","toLocaleDateString","checked","parseInt","toString","onClick","EditScreen","Date","selectedDate","setSelectedDate","d","App","setDb","loggedIn","setLoggedIn","host","window","location","protocol","includes","fetch","res","json","catch","err","log","d3","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5ab0647c.chunk.js","sourcesContent":["import CryptoJS from \"crypto-js\";\n\n\nfunction toString(words){\n    return CryptoJS.enc.Utf8.stringify(words);\n}\n\nfunction toBase64String(words){\n    return CryptoJS.enc.Base64.stringify(words);\n}\n\nexport function encryptData(input, key){\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n    var options = {\n        iv: iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var body = CryptoJS.AES.encrypt(input, secret_key, options);\n    iv.concat(body.ciphertext);\n    return toBase64String(iv);\n}\n\nexport function decryptData(input, key){\n    var packet = CryptoJS.enc.Base64.parse(input);\n\n    var secret_key = CryptoJS.SHA256(key);\n    var iv = CryptoJS.lib.WordArray.random(16);\n\n    var start = iv.words.length;\n    var end = packet.words.length;\n    \n    var ciphertext = CryptoJS.lib.WordArray.create(packet.words.slice(start, end));\n    var parsed_iv = CryptoJS.lib.WordArray.create(packet.words.slice(0, iv.words.length+1));\n    ciphertext = toBase64String(ciphertext);\n    var options = {\n        iv: parsed_iv,\n        mode: CryptoJS.mode.CBC\n    }\n    var decrypted = CryptoJS.AES.decrypt(ciphertext, secret_key, options);\n\n    return toString(decrypted);\n}","import { useState } from \"react\";\n\nconst Login = props => {\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        props.loginCallback(password);\n    }\n    return (\n        <div className=\"card\">\n             <form onSubmit={handleSubmit}>\n                <input\n                    value={password}\n                    onChange={({ target }) => {\n                        setPassword(target.value);\n                    }}\n                    name=\"password\"\n                    type=\"text\"\n                />\n                \n                <button \n                    className=\"btn submit-btn\" \n                    type=\"submit\"\n                >\n                    Go\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","import { decryptData, encryptData } from \"../enc/crypt.js\"\n\nconst month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n\nexport const getDataFromStruct = async (d2, date, password) => {\n    const cleartxt = decryptData(d2, password);\n    const clearjson = JSON.parse(cleartxt);\n    const YY = date.getFullYear();\n    const MM = month[date.getMonth()];\n    const DD = date.getDate();\n    const root = {\n        f: 0,\n        s: 0,\n        a: 0,\n        t: 0,\n        sl: 0,\n        m: 0,\n        w: 0,\n    }\n    if (!(YY in clearjson)) {\n        return root;\n    }\n    if (! (MM in clearjson[YY])) {\n        return root;\n    }\n    if (! (DD in clearjson[YY][MM])) {\n        return root;\n    }\n    return clearjson[YY][MM][DD];\n}\n\n\nexport const addDataToStruct = (d2, data, password) => {\n    const cleartxt = decryptData(d2, password);\n    const YY = data.date.getFullYear();\n    const MM = month[data.date.getMonth()];\n    const DD = data.date.getDate();\n    const root = {\n        f: data.food,\n        s: data.sport,\n        a: data.alcool,\n        t: data.tabac,\n        sl: data.sleep,\n        m: data.mood,\n        w: data.weight,\n    }\n\n    let clear = JSON.parse(cleartxt)\n\n    if (!(YY in clear)) {\n        clear[YY] = {};\n    }\n    if (! (MM in clear[YY])) {\n        clear[YY][MM] = {};\n    }\n    clear[YY][MM][DD] = root;\n    return encryptData(JSON.stringify(clear), password);\n}","import axios from \"axios\";\n\nexport async function commitFile(repository, branch, filePath, content, pat) {\n    const accessToken = pat;\n    try {\n        // Get reference SHA\n        const refResponse = await axios.get(\n            `https://api.github.com/repos/${repository}/contents/${filePath}`,\n            {\n                headers: {\n                    Authorization: `Token ${accessToken}`\n                }\n            }\n        );\n        \n        const refSha = refResponse.data.sha;\n        \n        await axios.put(\n            `https://api.github.com/repos/${repository}/contents/${filePath}`,\n            {\n                message: \"commit from js\",\n                content: btoa(content),\n                sha: refSha\n            },\n            {\n                headers: {\n                    Authorization: `Token ${accessToken}`\n                    }\n            }\n        )\n    } catch (error) {\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\n","const Message = props => {\n    if (props.message === \"\") {\n        return (<></>);\n    }\n    let msgClass = (props.error) ? \"error-message\" : \"ok-message\";\n    let textClass = (props.error) ? \"error-text\" : \"ok-text\";\n    \n    return (\n        <div className={msgClass}>\n            <span className={textClass}>{props.message}</span>\n        </div>\n    );\n}\n\nexport default Message;","import { useState, useEffect} from \"react\";\nimport { getDataFromStruct, addDataToStruct } from \"../data/handle.js\";\nimport {commitFile} from \"../gh/gh.js\"\nimport { decryptData} from \"../enc/crypt.js\"\nimport Message from \"./Message\";\n\nconst FormScreen = props => {\n    const [food, setFood] = useState(0);\n    const [sport, setSport] = useState(0);\n    const [alcool, setAlcool] = useState(0);\n    const [tabac, setTabac] = useState(0);\n    const [sleep, setSleep] = useState(0);\n    const [mood, setMood] = useState(0);\n    const [weight, setWeight] = useState(0);\n    const [error, setError] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n        getDataFromStruct(props.db.d2, props.date, props.password)\n            .then(function(data){\n                setFood(data.f);\n                setSport(data.s);\n                setAlcool(data.a);\n                setTabac(data.t);\n                setSleep(data.sl);\n                setMood(data.m);\n                setWeight(data.w);\n            })\n      }, [props.db.d2, props.date, props.password]);\n\n     async function handleCommitClick () {\n        const repository = \"sandrolex/sandrolex.github.io\";\n        const branch = \"main\";\n        const filePath = \"db.json\";\n        const content = JSON.stringify(props.db);\n        const pat = decryptData(props.db.d1, props.password);\n        if (!await commitFile(repository, branch, filePath, content, pat)) {\n            setError(true);\n            setMessage(\"Error: could not commit file\");\n        } else {\n            setMessage(\"Commit SUCCESS\");\n        }\n    }\n\n    const handleAddClick = () => {\n        const data = {\n            food: parseInt(food), \n            sport: parseInt(sport), \n            alcool: parseInt(alcool), \n            tabac: parseInt(tabac), \n            sleep: parseInt(sleep),\n            mood: parseInt(mood),\n            weight: parseInt(weight),\n            date: props.date\n        }\n        props.db.d2 = addDataToStruct(props.db.d2, data, props.password);\n        setMessage(\"Add SUCCESS\");\n    }\n\n\n    return (\n        <div>\n            <p>{props.date.toLocaleDateString('en-GB')}</p> \n            <div>\n                Food: \n                <input type=\"radio\" value=\"1\" name=\"food\" checked={food === 1} onChange={(e) => setFood(parseInt(e.target.value))}/>1\n                <input type=\"radio\" value=\"2\" name=\"food\" checked={food === 2} onChange={(e) => setFood(parseInt(e.target.value))}/>2\n                <input type=\"radio\" value=\"3\" name=\"food\" checked={food === 3} onChange={(e) => setFood(parseInt(e.target.value))}/> 3\n            </div>\n            <div>\n                Sport: \n                <input type=\"radio\" value=\"1\" name=\"sport\" checked={sport === 1} onChange={(e) => setSport(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"sport\" checked={sport === 2} onChange={(e) => setSport(parseInt(e.target.value))}/> 2\n                <input type=\"radio\" value=\"3\" name=\"sport\" checked={sport === 3} onChange={(e) => setSport(parseInt(e.target.value))}/> 3\n            </div>\n            <div>\n                Alcool: \n                <input type=\"radio\" value=\"1\" name=\"alcool\" checked={alcool === 1} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"alcool\" checked={alcool === 2} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 2\n                <input type=\"radio\" value=\"3\" name=\"alcool\" checked={alcool === 3} onChange={(e) => setAlcool(parseInt(e.target.value))}/> 3\n            </div>\n            <div>\n                Tabac: \n                <input type=\"radio\" value=\"1\" name=\"tabac\" checked={tabac === 1} onChange={(e) => setTabac(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"tabac\" checked={tabac === 2} onChange={(e) => setTabac(parseInt(e.target.value))}/> 2\n            </div>\n            <div>\n                Sleep: \n                <input type=\"radio\" value=\"1\" name=\"sleep\" checked={sleep === 1} onChange={(e) => setSleep(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"sleep\" checked={sleep === 2} onChange={(e) => setSleep(parseInt(e.target.value))}/> 2\n            </div>\n            <div>\n                Mood: \n                <input type=\"radio\" value=\"1\" name=\"mood\" checked={mood === 1} onChange={(e) => setMood(parseInt(e.target.value))}/> 1\n                <input type=\"radio\" value=\"2\" name=\"mood\" checked={mood === 2} onChange={(e) => setMood(parseInt(e.target.value))}/> 2\n            </div>\n            <div>\n                Weight: \n                <input type=\"text\" name=\"weight\" value={weight.toString()} onChange={(e) => setWeight(parseInt(e.target.value))}/>\n            </div>\n            <div>\n                <button onClick={handleAddClick}>Add</button>\n                &nbsp;\n                <button onClick={handleCommitClick}>Commit</button>\n                <br/>\n                <br/>\n            </div>\n\n            <Message message={message} error={error} />\n        </div>\n    );\n}\n\nexport default FormScreen;\n","import { useState } from \"react\";\nimport Calendar from 'moedim';\nimport FormScreen from \"./FormScreen\";\n\nconst EditScreen = props => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    \n    const ReceiveDate = (data) => {\n        setSelectedDate(data);\n    }\n\n    return (\n        <div className=\"card\">\n            <Calendar value={selectedDate} onChange={(d) => { ReceiveDate(d) } }/>\n            \n            <FormScreen \n                date={selectedDate} \n                db={props.db} \n                password={props.password}\n            />\n        </div>\n    );\n}\n\n\nexport default EditScreen;","import { useState, useEffect } from \"react\";\nimport { decryptData} from \"./enc/crypt.js\"\n\nimport Login from \"./Login/Login\"\nimport EditScreen from \"./Screens/EditScreen\"\n\nfunction App() {\n  const [password, setPassword] = useState(\"\");\n  const [db, setDb] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(\"false\");\n\n  const loginCallback = (data) => {\n    setPassword(data);\n    const verif = decryptData(db.d3, data);\n    if (verif === \"true\") {\n      setLoggedIn(\"true\");\n    } else {\n      console.log(\"failed\")\n    }\n  }\n\n  useEffect(() => {\n    const host = window.location.host;\n    let protocol = \"http://\";\n    if (host.includes(\"github\") ) {\n      protocol = \"https://\";\n    }\n    const dbUrl = protocol + host + '/db.json';\n    fetch(dbUrl).then(\n\t\t  function (res) {\n\t\t\t  return res.json();\n\t\t  },\n    ).then(function (data) {\n      // store Data in State db Variable\n      setDb(data);\n    }).catch(\n      function (err) {\n        console.log(err, ' error');\n      },\n    );\n  }, []);\n    \n  if (loggedIn === \"false\") {\n    return (\n      <Login loginCallback={loginCallback} d3={db.d3}/>\n    )\n  } else {\n    return (\n    <div className=\"container\">\n      <EditScreen \n          password={password}\n          db={db}\n        />\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}